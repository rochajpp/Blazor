@page "/"
@inject HttpClient http;

<h1>Tarefas</h1>

@if(tarefas == null)
{
    <p>Carregando...</p>
} else if (!tarefas.Any())
{
    <p>Lista vazia!</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Data de Criação</th>
                <th>Concluída</th>
            </tr>
        </thead>

        <tbody>
            @foreach(var tarefa in tarefas)
            {
                <tr>
                    <td>@tarefa.Descricao</td>
                    <td>@tarefa.DataCriacao</td>
                    <td>
                        <input style="cursor: pointer;" type="checkbox" @bind="@tarefa.Concluida" /> 
                        @if (tarefa.Concluida) 
                        { 
                            
                            <text> Feito</text>
                        }
                        else
                        {
                            <text> Pendente</text>
                        }
                    </td>
                    <td><button @onclick="@(() => DeletarTarefa(@tarefa.ID))" class="delBtn"><i class="oi oi-trash"></i></button></td>
                </tr>
            }
        </tbody>   
    </table>
    <label>Tarefa</label>
    <input type="text" @bind="novaTarefa">
    <button class="btn btn-primary" @onclick="AddTarefa">Adicionar</button>
}


@code{

    protected override async Task OnInitializedAsync()
    {
        tarefas = await http.GetFromJsonAsync<List<Tarefa>>("dados/tarefas.json");
    }

    public class Tarefa
    {
        public Guid ID;
        public string Descricao { get; set; }
        public bool Concluida{ get; set; }
        public DateTime DataCriacao { get; set; }


        public Tarefa(){}
        public Tarefa(string tarefa)
        {
            this.Descricao = tarefa;
            this.ID = Guid.NewGuid();
            this.Concluida = false;
            this.DataCriacao = DateTime.Now;
        }
    }

    public class NovaTarefa
    {
        public Guid ID{ get; set; }
        public string Descricao { get; set; }
        public bool Concluida{ get; set; }
        public DateTime DataCriacao{ get; set; }


    }

    string novaTarefa="";

    public List<Tarefa> tarefas = new List<Tarefa>();

    public void DeletarTarefa(Guid id)
    {
        tarefas.Remove(tarefas.First(x => x.ID == id));
    }

    public void AddTarefa()
    {
        if (novaTarefa != "")
        {
            Tarefa nt = new Tarefa(novaTarefa);
            tarefas.Add(nt);
            novaTarefa = "";
        }
    }

}