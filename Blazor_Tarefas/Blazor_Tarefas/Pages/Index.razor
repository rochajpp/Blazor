@page "/"
@inject HttpClient http

<h1>Tarefas</h1>

@if(tarefas == null)
{
    <p>Carregando...</p>
}
else if (!tarefas.Any())
{
    <p>Ainda não existem tarefas...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ação</th>
                <th>Data</th>
                <th>Descrição</th>
                <th>Concluída</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in tarefas)
            {
                <tr>
                    <td><button @onclick= "@(() => RemoveTarefa(item.Id))"><i class="oi oi-trash"></i></button></td>
                    <td>@item.DataCriacao</td>
                    <td>@item.Descricao</td>
                    <td><input type="checkbox" @bind="item.Concluida"> @item.Concluida</td>
                </tr>
            }
        </tbody>
    </table>
}


@if(tarefas != null)
{
    <div class="formGroup">
        <label>Tarefa</label>
        <input type="text" placeholder="Informe a tarefa" @bind='novaTarefa'>
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Registrar Tarefa</button>
    </div>
}

@code{

    protected override async Task OnInitializedAsync()
    {
        tarefas = await http.GetFromJsonAsync<List<Tarefa>>("dados/tarefas.json");
    }

    public class Tarefa
    {

        public Guid Id { get; set; }
        public string Descricao { get; set; }
        public bool Concluida { get; set; }
        public DateTime DataCriacao { get; set; }

        public Tarefa(string descricao)
        {
            this.Descricao = descricao;
            this.Id = Guid.NewGuid();
            DataCriacao = DateTime.Now;
            Concluida = false;
        }

    }

    private string novaTarefa = "";

    private List<Tarefa> tarefas = new List<Tarefa>();

    void AdicionarNovaTarefa()
    {
        if(novaTarefa != "")
        {
            Tarefa tarefa = new Tarefa(novaTarefa);
            tarefas.Add(tarefa);

            novaTarefa = "";
        }
        else
        {
            Console.WriteLine("Tarefa vazia!");
        }
    }

    void RemoveTarefa(Guid id)
    {
        tarefas.Remove(tarefas.First(x => x.Id == id));
    }
}
